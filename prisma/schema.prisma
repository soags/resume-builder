generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  sessions Session[]
  resumes  Resume[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Resume {
  id          String @id @default(uuid())
  userId      String
  title       String @default("")
  name        String @default("")
  label       String @default("")
  github      String @default("")
  qiita       String @default("")
  zenn        String @default("")
  speakerDeck String @default("")
  slideShare  String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  skills Skill[]
  certs  Cert[]

  user User @relation(fields: [userId], references: [id])
}

model Skill {
  id       String @id @default(uuid())
  resumeId String
  text     String
  orderNo  Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resume Resume @relation(fields: [resumeId], references: [id])
}

model Cert {
  id       String @id @default(uuid())
  resumeId String
  name     String
  year     Int?
  month    Int?
  issuer   String @default("")
  url      String @default("")
  orderNo  Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resume Resume @relation(fields: [resumeId], references: [id])
}
